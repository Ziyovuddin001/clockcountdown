[{"/Users/la_tahzan_innalloha_mana/Desktop/clockcountdown/src/index.js":"1","/Users/la_tahzan_innalloha_mana/Desktop/clockcountdown/src/App.js":"2","/Users/la_tahzan_innalloha_mana/Desktop/clockcountdown/src/context/SettingsContext.js":"3","/Users/la_tahzan_innalloha_mana/Desktop/clockcountdown/src/components/Button.js":"4","/Users/la_tahzan_innalloha_mana/Desktop/clockcountdown/src/components/SetPomodoro.js":"5","/Users/la_tahzan_innalloha_mana/Desktop/clockcountdown/src/components/CountdownAnimation.js":"6"},{"size":298,"mtime":1612607260000,"results":"7","hashOfConfig":"8"},{"size":1637,"mtime":1643720306463,"results":"9","hashOfConfig":"8"},{"size":1852,"mtime":1643704131620,"results":"10","hashOfConfig":"8"},{"size":176,"mtime":1612607260000,"results":"11","hashOfConfig":"8"},{"size":1121,"mtime":1643698924541,"results":"12","hashOfConfig":"8"},{"size":675,"mtime":1643702355419,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ea6rh5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/la_tahzan_innalloha_mana/Desktop/clockcountdown/src/index.js",[],["31","32"],"/Users/la_tahzan_innalloha_mana/Desktop/clockcountdown/src/App.js",["33","34"],"import React, { useEffect, useContext } from 'react'\nimport Button from './components/Button'\nimport CountdownAnimation from './components/CountdownAnimation'\nimport SetPomodoro from './components/SetPomodoro'\nimport { SettingsContext } from './context/SettingsContext'\n\nconst App = () => {\n\n  const {\n    pomodoro: pomidor,\n    executing,\n    startAnimate,\n    children,\n    startTimer,\n    pauseTimer,\n    updateExecute,\n    setCurrentTimer,\n    SettingsBtn } = useContext(SettingsContext)\n\n  useEffect(() => { updateExecute(executing) }, [executing, startAnimate])\n\n  return (\n    <div className='box'>\n\n      <div className=\"container\">\n        {pomidor !== 0 ?\n          <>\n            <div className=\"timer-container\">\n              <div className=\"time-wrapper\">\n                <CountdownAnimation\n                  key={pomidor}\n                  timer={pomidor}\n                  animate={startAnimate}\n                >\n                  {children}\n                </CountdownAnimation>\n              </div>\n            </div>\n            <div className='box'>\n              <div className=\"btnn\">\n                <Button title=\"Break\" activeClass={startAnimate ? 'active' : undefined} _callback={pauseTimer} />\n              </div>\n              <div className='btnn'>\n                <Button title=\"cancel\" _callback={SettingsBtn} />\n              </div>\n            </div>\n            <div className='boxx'>\n              <Button title=\"Start\" activeClass={!startAnimate ? 'active' : undefined} _callback={startTimer} />\n            </div>\n          </> : <SetPomodoro />}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","/Users/la_tahzan_innalloha_mana/Desktop/clockcountdown/src/context/SettingsContext.js",["35"],"import { useState, createContext } from \"react\";\n\nexport const SettingsContext = createContext()\n\nfunction SettingsContextProvider(props) {\n\n    const [pomodoro, setPomodoro] = useState(0)\n    const [executing, setExecuting] = useState({})\n    const [startAnimate, setStartAnimate] = useState(false)\n\n    function setCurrentTimer(active_state) {\n        updateExecute({\n            ...executing,\n            active: active_state\n        })\n        setTimerTime(executing)\n    }\n\n    function startTimer() {\n        setStartAnimate(true)\n    }\n    function pauseTimer() {\n        setStartAnimate(false)\n    }\n    const children = ({ remainingTime }) => {\n        // const watch = Math.floor(minutes / 60)\n        const hour = Math.floor(Math.floor(remainingTime / 60) / 60)\n        // const hour = Math.floor(minutes / 60)\n        const minutes = Math.floor(remainingTime / 60)\n        const seconds = remainingTime % 60\n\n        return `${hour}${hour}:${minutes}:${seconds}`\n    }\n\n    const SettingsBtn = () => {\n        setExecuting({})\n        setPomodoro(0)\n    }\n\n    const updateExecute = updatedSettings => {\n        setExecuting(updatedSettings)\n        setTimerTime(updatedSettings)\n    }\n\n    const setTimerTime = (evaluate) => {\n        switch (evaluate.active) {\n            case 'work':\n                setPomodoro(evaluate.work)\n        }\n    }\n\n    function stopAimate() {\n        setStartAnimate(false)\n    }\n\n    return (\n        <SettingsContext.Provider value={{\n            pomodoro,\n            executing,\n            updateExecute,\n            startAnimate,\n            startTimer,\n            pauseTimer,\n            children,\n            SettingsBtn,\n            setCurrentTimer,\n            stopAimate\n        }}>\n            {props.children}\n        </SettingsContext.Provider>\n    )\n\n}\n\nexport default SettingsContextProvider","/Users/la_tahzan_innalloha_mana/Desktop/clockcountdown/src/components/Button.js",[],"/Users/la_tahzan_innalloha_mana/Desktop/clockcountdown/src/components/SetPomodoro.js",["36"],"import React, { useContext, useState } from 'react'\nimport { SettingsContext } from '../context/SettingsContext'\n\nconst SetPomodoro = () => {\n\n    const [newTimer, setNewTimer] = useState({\n        work: 0,\n        active: 'work'\n    })\n\n    const { updateExecute } = useContext(SettingsContext)\n\n    const handleChange = input => {\n        const { name, value } = input.target\n        switch (name) {\n            case 'work':\n                setNewTimer({\n                    ...newTimer,\n                    work: parseInt(value)\n                })\n                break;\n        }\n    }\n    const handleSubmit = e => {\n        e.preventDefault()\n        updateExecute(newTimer)\n    }\n    return (\n        <div className=\"form-container\">\n            <form noValidate onSubmit={handleSubmit} >\n                <div className=\"input-wrapper\">\n                    <input className=\"input\" type=\"number\" name=\"work\" onChange={handleChange} value={newTimer.work} />\n                </div>\n                <button type='submit'>Vaqtni kiriting</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SetPomodoro\n",["37","38"],"/Users/la_tahzan_innalloha_mana/Desktop/clockcountdown/src/components/CountdownAnimation.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":17,"column":5,"nodeType":"45","messageId":"46","endLine":17,"endColumn":20},{"ruleId":"47","severity":1,"message":"48","line":20,"column":49,"nodeType":"49","endLine":20,"endColumn":74,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":46,"column":9,"nodeType":"53","messageId":"54","endLine":49,"endColumn":10},{"ruleId":"51","severity":1,"message":"52","line":15,"column":9,"nodeType":"53","messageId":"54","endLine":22,"endColumn":10},{"ruleId":"39","replacedBy":"55"},{"ruleId":"41","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'setCurrentTimer' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateExecute'. Either include it or remove the dependency array.","ArrayExpression",["59"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["57"],["58"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [executing, startAnimate, updateExecute]",{"range":"62","text":"63"},[541,566],"[executing, startAnimate, updateExecute]"]